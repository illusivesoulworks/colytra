buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'gradle.plugin.com.matthewprenger', name: 'CurseGradle', version: '1.4.0'
		classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${mod_version}"
group = "top.theillusivec4.colytra"
archivesBaseName = "colytra-forge"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2021.12.19-1.18.1'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                colytra {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                colytra {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url = "https://www.cursemaven.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    implementation fg.deobf("top.theillusivec4.caelus:caelus-forge:${caelus_version}")
    implementation fg.deobf("curse.maven:cyclic-239286:3640911")
}

def replaceResources = tasks.register("replaceResources", Copy) {
    it.outputs.upToDateWhen { false }

    it.from(sourceSets.main.resources) {
        include "META-INF/mods.toml"
        expand 'version': version, 'mc_version_range': mc_version_range, 'forge_version_range': forge_version_range, 'loader_version': loader_version, 'caelus_version_range': caelus_version_range
    }
    it.into "$buildDir/resources/main/"
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    exclude('META-INF/mods.toml')
    configure { finalizedBy(replaceResources) }
}

sourceSets {
    main {
        resources {
            srcDirs += 'docs'
        }
    }
}

jar {
    manifest {
        attributes(["Specification-Title"		: "Colytra",
                    "Specification-Vendor"		: "C4",
                    "Specification-Version"		: "1",
                    "Implementation-Title"		: "Colytra",
                    "Implementation-Version"	: "${getArchiveVersion()}",
                    "Implementation-Vendor" 	: "C4",
                    "Implementation-Timestamp"	: new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

jar.finalizedBy('reobfJar')

curseforge {

    project {
        apiKey = findProperty('curseKey') ?: 0
        id = "280200"
        releaseType = "${curse_release}"
        changelogType = 'markdown'
        changelog = file('docs/CHANGELOG.md')
        relations {
            requiredDependency 'caelus'
        }
        addArtifact(sourcesJar)
		"${curse_versions}".split(',').each {
            addGameVersion "${it}"
        }
    }
}